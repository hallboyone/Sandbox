Money Tracker Specs Document

Project Description:
Money Tracker is a minimilistic approuch to money management and budgeting. It is not linked to your accounts and depends on the user to input the correct amounts spend. While this does not lead to the most intuitive UI, it reduces the complexity and potential privacy violations so often present in 'connected' applications.
Money Tracker is designed to automate the 'envolope' budgeteing paradigm in which every dollar is either saved or marked for a specific purpose. The goal of this mindset is to reduce spending in impulse areas and to force the budgeter to plan for future expenses. This increases the amount saved and reduces the stress surrounding large, future expenses. 
Money Tracker is initialized with the user's Money Profile which is made up of Envelopes. Each Envelope represents a ongoing or projected expense that the user wishes to save for. The exception to this is the Savings Envelope. This Envelope is the only one you start with and is intended to hold long term and rainy day funds.
Each Envelope has a name, a catagory, an amount. Additionally, an envelope can have a periodic incrementor that adds to the Envelope after a given amount of time called the Period. The user can check the currect balance and 'deposit', 'withdraw', or 'transfer' money in these Envelopes. The Envelopes also of a unique ID that identifies the Envelope's catagory. This provides the user a shorthand method to access the Envelope.

Once booted, the users Money History is loaded and the current state of the 

ID breakdown:
[Account Type]-[Envelope Type]-[#]
	 Account Types:
	 CH - Checking
	 SA - Savings
	 CA - Cash

	 Envelope Types:
	 SCE - Scheduled Expenses (rent, car payments, etc)
	 COL - Cost of living (food, gas, etc)
	 FLX - Flex money (eating out, travel, etc)
	 LNG - Long term costs (general savings, college, etc)

Ex 1: CH-FLX-3 ==> The third Envolope in Checking that is a flexable account (i.e. for movie tickets)
Ex 2: CA-SCE-2 ==> The second Envolope of cash for a scheduled expense (i.e. Lawn care service)


Possible Commands:
- disp:			Display all Envelopes and their current amount -> "CH-COL-3 Auto: $152.98"
- disp-all:     		Display all Envelopes, their current amount, and incrementor -> "CH-COL-3 Auto: $152.98 + $15.00/w"
- add 13.28 Auto:		Adds the set amount to the 'Auto' Envelope. -> "CH-COL-3 Auto: 152.98 + 13.28 = 166.26"
- rm 165.27 CH-COL-3:	Removes the set amount from the CH-COL-3 Envelope -> "CH-COL-3 Auto: 152.98 - 165.27 = -12.29"
   	  		NOTE: When a account goes negative, a warning will print informing the user. -> "Warning: Auto is in the negative. Try to avoid future expenses if possible. Alternitivly, use the bal command to move the deficit amount from another account (bal Auto Savings)"
- bal Auto Travel		Move enough money from Travel to Auto to remove any deficit
- bal 15 Auto Travel	Move enough money from Travel to Auto to increase Auto to 15. If Auto is greater than 15, do nothing.
- trans 10 Auto Travel	Transfer $10 from auto to travel
- mkenvl Hobbies	Create a new Envelope 'Hobbies'. The Envelope's number is defaulted to CH-FLX-#, incrementor to 0, period to equal SA-LNG-1's period 
- set Auto period w:    Set a property of an envelope. In the example, Auto's period will be set to weekly.
  	   	       	     * period = {day or d, week or w, month or m, year or y}
	   		     * incrementor = {any number greater than 0 rounded to 2 decimals (1.542 => 1.54)}
	   		     * name = {any set of numbers or letters without spaces}
	   		     * cat = {auto, bills, edu, entertainment, food, gas, gifts, groceries, health, home, personal, services, shopping, travel}
- smart-set Auto: 	Asks the user what their goals are and sets the incrementor based on that
Ex (assume Auto's period is weekly):
    ==> smart-set Auto
    <== What are you goals? (1 - have an amount by date, 2 - pay a periodic amount, 3 - pay multiply periodic amounts)
    ==> 3
    <== How much is the first amount per period (0 to end)?
    ==> 54
    <== What is the period (d - day, w - week, m - month, y - year)
    ==> m
    <== What is the next amount per period (0 to end)?
    ==> 250
    <== What is the period (d - day, w - week, m - month, y - year)
    ==> y
    <== What is the period (d - day, w - week, m - month, y - year)
    ==> 0
    <== Set Auto to increment $17.27 per week
    end

